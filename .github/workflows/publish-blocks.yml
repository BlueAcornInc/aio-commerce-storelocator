name: Publish Store Locator Blocks to GitHub Packages

on:
  push:
    branches:
      - block-package
    paths:
      - 'blocks/**'
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version_bump:
        description: 'Version bump type'
        required: true
        default: 'patch'
        type: choice
        options:
        - patch
        - minor
        - major

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@blueacorninc'

      - name: Configure npm for GitHub Packages
        run: |
          echo "@blueacorninc:registry=https://npm.pkg.github.com" >> ~/.npmrc
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}" >> ~/.npmrc

      - name: Configure npm for npmjs.com
        run: |
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" >> ~/.npmrc

      - name: Install dependencies
        working-directory: ./blocks
        run: npm install --ignore-scripts

      - name: Bump version (if manual trigger)
        if: github.event_name == 'workflow_dispatch'
        working-directory: ./blocks
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          npm version ${{ github.event.inputs.version_bump }} --no-git-tag-version
          echo "VERSION=$(npm pkg get version | tr -d '\"')" >> $GITHUB_ENV

      - name: Auto-bump version for testing branch
        if: github.event_name == 'push' && github.ref == 'refs/heads/block-package'
        working-directory: ./blocks
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          # Get current version and create a prerelease version with branch name
          CURRENT_VERSION=$(npm pkg get version | tr -d '\"')
          BRANCH_NAME=$(echo "${{ github.ref_name }}" | sed 's/[^a-zA-Z0-9]/-/g')
          COMMIT_SHA=$(echo "${{ github.sha }}" | cut -c1-7)
          echo "Current version: $CURRENT_VERSION"
          echo "Branch: $BRANCH_NAME"
          echo "Commit: $COMMIT_SHA"
          
          # Create prerelease version like 1.0.0-block-package.abc1234
          NEW_VERSION="${CURRENT_VERSION}-${BRANCH_NAME}.${COMMIT_SHA}"
          npm version --no-git-tag-version $NEW_VERSION
          echo "New prerelease version: $NEW_VERSION"
          echo "VERSION=$NEW_VERSION" >> $GITHUB_ENV

      - name: Get version from package.json
        if: github.event_name != 'workflow_dispatch' && github.ref != 'refs/heads/block-package'
        working-directory: ./blocks
        run: |
          echo "VERSION=$(npm pkg get version | tr -d '\"')" >> $GITHUB_ENV

      - name: Check if version already exists
        if: github.ref != 'refs/heads/block-package'
        working-directory: ./blocks
        run: |
          # Check GitHub Packages
          if npm view @blueacorninc/storefront-storelocator@$VERSION --registry=https://npm.pkg.github.com > /dev/null 2>&1; then
            echo "Version $VERSION already exists on GitHub Packages. Skipping GitHub publish."
            echo "SKIP_GITHUB_PUBLISH=true" >> $GITHUB_ENV
          else
            echo "Version $VERSION does not exist on GitHub Packages. Proceeding with GitHub publish."
            echo "SKIP_GITHUB_PUBLISH=false" >> $GITHUB_ENV
          fi
          
          # Check npmjs.com
          if npm view @blueacorninc/storefront-storelocator@$VERSION --registry=https://registry.npmjs.org > /dev/null 2>&1; then
            echo "Version $VERSION already exists on npmjs.com. Skipping npmjs publish."
            echo "SKIP_NPMJS_PUBLISH=true" >> $GITHUB_ENV
          else
            echo "Version $VERSION does not exist on npmjs.com. Proceeding with npmjs publish."
            echo "SKIP_NPMJS_PUBLISH=false" >> $GITHUB_ENV
          fi
          
          # Set overall skip flag if both are already published
          if [ "$SKIP_GITHUB_PUBLISH" == "true" ] && [ "$SKIP_NPMJS_PUBLISH" == "true" ]; then
            echo "SKIP_PUBLISH=true" >> $GITHUB_ENV
          else
            echo "SKIP_PUBLISH=false" >> $GITHUB_ENV
          fi
        continue-on-error: true

      - name: Skip version check for testing branch
        if: github.ref == 'refs/heads/block-package'
        run: |
          echo "Testing branch detected - auto-incremented version $VERSION, proceeding with publish."
          echo "SKIP_PUBLISH=false" >> $GITHUB_ENV
          echo "SKIP_GITHUB_PUBLISH=false" >> $GITHUB_ENV
          echo "SKIP_NPMJS_PUBLISH=false" >> $GITHUB_ENV

      - name: Publish to GitHub Packages
        if: env.SKIP_GITHUB_PUBLISH == 'false'
        working-directory: ./blocks
        run: |
          # Temporarily set registry to GitHub Packages for this publish
          npm config set registry https://npm.pkg.github.com
          if [ "${{ github.ref }}" == "refs/heads/block-package" ]; then
            echo "Publishing prerelease version to GitHub Packages with beta tag..."
            npm publish --access public --tag beta
          else
            echo "Publishing stable version to GitHub Packages with latest tag..."
            npm publish --access public
          fi
          # Reset registry
          npm config delete registry
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish to npmjs.com
        if: env.SKIP_NPMJS_PUBLISH == 'false'
        working-directory: ./blocks
        run: |
          # Set registry to npmjs.com for this publish
          npm config set registry https://registry.npmjs.org
          if [ "${{ github.ref }}" == "refs/heads/block-package" ]; then
            echo "Publishing prerelease version to npmjs.com with beta tag..."
            npm publish --access public --tag beta
          else
            echo "Publishing stable version to npmjs.com with latest tag..."
            npm publish --access public
          fi
          # Reset registry
          npm config delete registry
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create Git tag (if manual trigger and published)
        if: github.event_name == 'workflow_dispatch' && (env.SKIP_GITHUB_PUBLISH == 'false' || env.SKIP_NPMJS_PUBLISH == 'false')
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git tag "blocks-v${{ env.VERSION }}"
          git push origin "blocks-v${{ env.VERSION }}"

      - name: Create GitHub Release (if manual trigger and published)
        if: github.event_name == 'workflow_dispatch' && (env.SKIP_GITHUB_PUBLISH == 'false' || env.SKIP_NPMJS_PUBLISH == 'false')
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: blocks-v${{ env.VERSION }}
          release_name: Store Locator Blocks v${{ env.VERSION }}
          body: |
            ## Store Locator Blocks v${{ env.VERSION }}
            
            ### Installation
            
            **From npmjs.com:**
            ```bash
            npm install @blueacorninc/storefront-storelocator@${{ env.VERSION }}
            ```
            
            **From GitHub Packages:**
            ```bash
            npm install @blueacorninc/storefront-storelocator@${{ env.VERSION }} --registry=https://npm.pkg.github.com
            ```
            
            ### What's Included
            - Store Locator block with interactive maps
            - Product Availability block
            - Automatic installation via postinstall script
            
            ### Changes
            Automated release for blocks package.
            
            ### Registries
            This package is published to both npmjs.com and GitHub Packages.
          draft: false
          prerelease: false

      - name: Output results
        run: |
          if [ "$SKIP_PUBLISH" == "true" ]; then
            echo "‚úÖ Version $VERSION already exists on both registries - skipped publish"
          else
            echo "üéâ Publishing results for version $VERSION:"
            
            if [ "$SKIP_GITHUB_PUBLISH" == "false" ]; then
              echo "‚úÖ Successfully published to GitHub Packages: @blueacorninc/storefront-storelocator@$VERSION"
              echo "üì¶ GitHub Packages: https://github.com/BlueAcornInc/storefront/packages"
            else
              echo "‚è≠Ô∏è  Skipped GitHub Packages (version already exists)"
            fi
            
            if [ "$SKIP_NPMJS_PUBLISH" == "false" ]; then
              echo "‚úÖ Successfully published to npmjs.com: @blueacorninc/storefront-storelocator@$VERSION"
              echo "üì¶ npmjs.com: https://www.npmjs.com/package/@blueacorninc/storefront-storelocator"
            else
              echo "‚è≠Ô∏è  Skipped npmjs.com (version already exists)"
            fi
            
            if [ "${{ github.ref }}" == "refs/heads/block-package" ]; then
              echo ""
              echo "üß™ This was a prerelease publish from block-package branch"
              echo "üìù Install from npmjs.com: npm install @blueacorninc/storefront-storelocator@$VERSION"
              echo "üìù Install from GitHub: npm install @blueacorninc/storefront-storelocator@$VERSION --registry=https://npm.pkg.github.com"
              echo "üìù Or latest beta from npmjs.com: npm install @blueacorninc/storefront-storelocator@beta"
            fi
          fi
